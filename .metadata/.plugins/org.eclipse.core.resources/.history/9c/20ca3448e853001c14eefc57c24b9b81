package com.til.colombia.expresso.apiConfig;

//import org.json.JSONArray;
//import org.json.JSONObject;
import org.testng.Assert;


//import com.aventstack.extentreports.Status;
//import com.google.gson.JsonArray;
import com.til.colombia.expresso.base.BaseTestSetup;

import io.restassured.response.Response;

public class ApiVerification extends BaseTestSetup {
	
	
	public static void responseCodeValidation(Response response, int statusCode) {
		try {
			Assert.assertEquals(response.getStatusCode(), statusCode, "Not getting expected status code");
			//test.log(Status.PASS,
					//"Successfully validdated status code, status code is :: " + response.getStatusCode());
			LOGGER.info("Successfully validdated status code, status code is :: " + response.getStatusCode());
		/*} catch (AssertionError e) {
			test.log(Status.FAIL, e.fillInStackTrace());
			test.log(Status.FAIL,
					"Expected status code is :: " + statusCode + " , instead of getting :: " + response.getStatusCode());
			e.printStackTrace();*/
		}catch (Exception e) {
			//test.log(Status.FAIL, e.fillInStackTrace());
			LOGGER.error(e.fillInStackTrace());
	}
}
	
	public static void responseTimeValidation(Response response) {
		try {
			long time=response.time();
			//test.log(Status.INFO, "Api response time is :: " + time);
			LOGGER.info("Api response time is :: " + time);
		} catch (Exception e) {
			//test.log(Status.FAIL, e.fillInStackTrace());
			LOGGER.error(e.fillInStackTrace());
		}
	}
	

	
	public static void responseKeyValidationFromResponseBody(Response response, String key) {
		try {
			String getBody=response.body().asString();
			Assert.assertEquals(getBody.contains(key), true);
			//test.log(Status.PASS, "Sucessfully validated : " + key);
			LOGGER.info("Sucessfully validated : " + key);
		} catch (Exception e) {
			//test.log(Status.FAIL, e.fillInStackTrace());
			LOGGER.error(e.fillInStackTrace());
		}
	}
	
	public static void responseKeyValidationFromJsonpath(Response response, String key, String value) {
		try {
			String getValue=response.jsonPath().get(key);
			Assert.assertEquals(getValue.equals(value), true);
		//	test.log(Status.PASS, "Sucessfully validated value of: " + key);
			LOGGER.info("Sucessfully validated value of: " + key);
		} catch (Exception e) {
			//test.log(Status.FAIL, e.fillInStackTrace());
			LOGGER.error(e.fillInStackTrace());
		}
	}
	
}
