package com.til.colombia.expresso.test.sanity;

import java.io.IOException;
import org.apache.http.ParseException;
import org.testng.Assert;
import org.testng.annotations.Test;
import com.til.colombia.expresso.pageobjects.prod.OrdersPageObjects;

public class Orders extends OrdersPageObjects {

	@Test(priority=0, enabled=false)
	public void checkDashboardPage()
	{
		Assert.assertEquals(openDashboardPage(), true);
	}
	
	@Test(priority = 1, enabled=false)
	public void filteredOrders() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyFilter(), true);
	}

	@Test(priority = 2,enabled=false)
	public void landingPageCampaign() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLandingpageCampaign(), true);
	}

	@Test(priority = 3,enabled=false)
	public void landingPageDataCampaign() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLandingPageDataPopulated(), true);
	}

	@Test(priority = 4)
	public void landingPageOrder() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLandingpageOrder(), true);
	}

	@Test(priority = 5)
	public void landingPageDataOrder() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLandingPageDataPopulated(), true);
	}

	@Test(priority = 6)
	public void landingPageProposal() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLandingpageProposal(), true);
	}

	@Test(priority = 7)
	public void landingPageDataProposal() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLandingPageDataPopulated(), true);
	}
	
	@Test(priority = 8)
	public void invoiceLandingPage() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLandingPage(), true);
	}
	
	@Test(priority = 9)
	public void invoiceCount() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(checkInvoiceCount(), true);
	}
	
	@Test(priority = 10)
	public void dataPopulationInvoice() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(checkDataPopulationInvoice(), true);
	}
	
	@Test(priority = 11)
	public void invoicePdfDownload() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyPdfDownload(), true);
	}
	
	@Test(priority = 12)
	public void marketingLeadLP() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLPPage("Marketing"), true);
	}
	
	@Test(priority = 13)
	public void orderDetailLP() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLPPage("Order"), true);
	}
	
	@Test(priority = 14)
	public void paymentDetailLP() throws ParseException, IOException, InterruptedException {

		Assert.assertEquals(verifyLPPage("Payment"), true);
	}
}
